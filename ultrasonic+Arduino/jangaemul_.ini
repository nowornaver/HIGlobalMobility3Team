import serial
import time

# 하나의 보드만 연결됨
serial_port = serial.Serial('COM8', 9600, timeout=1)
time.sleep(2)

# 거리 기준
OBSTACLE_THRESHOLD = 50
RECOVERY_DISTANCE = 100
REQUIRED_CONSECUTIVE_HITS = 3  # 연속 감지 횟수

# 상태 정의
state = "WAYPOINT_FOLLOWING"
consecutive_hits = 0
steering_time = None
reversing_time = None

def get_distance():
    line = serial_port.readline().decode('utf-8').strip()
    if line:
        try:
            _, dist = line.split(",")
            return float(dist)
        except ValueError:
            print("거리 파싱 실패:", line)
    return None

def main():
    global state, consecutive_hits, steering_time, reversing_time

    while True:
        distance = get_distance()
        if distance is None:
            continue

        print(f"\n📏 전방 거리: {distance:.1f} cm | 상태: {state}")

        if state == "WAYPOINT_FOLLOWING":
            print("🚗 웨이포인트 주행 중...")
            if distance <= OBSTACLE_THRESHOLD:
                consecutive_hits += 1
                print(f"⚠️ 연속 감지 횟수: {consecutive_hits}")
                if consecutive_hits >= REQUIRED_CONSECUTIVE_HITS:
                    print("🛑 장애물 감지 → 정지 및 후진 준비")
                    state = "REVERSING"
                    reversing_time = time.time()
                    consecutive_hits = 0
            else:
                consecutive_hits = 0  # 연속 실패 → 리셋

        elif state == "REVERSING":
            print("⏪ 후진 중...")
            if time.time() - reversing_time >= 1.5:
                print("↪️ 조향각 회전 (우회)")
                state = "STEERING"
                steering_time = time.time()

        elif state == "STEERING":
            print("↔️ 우회 회전 중...")
            if time.time() - steering_time >= 1.5:
                print("✅ 조향 복구 → 웨이포인트 복귀")
                state = "WAYPOINT_FOLLOWING"

        time.sleep(0.1)

if __name__ == "__main__":
    main()
